# Generated by Django 5.2.6 on 2025-09-07 02:55

from pathlib import Path

import yaml
from django.db import migrations


def setup_discord_oauth(apps, schema_editor):  # noqa: ARG001
    """Set up Discord OAuth SocialApp from configuration"""
    SocialApp = apps.get_model("socialaccount", "SocialApp")
    Site = apps.get_model("sites", "Site")

    # Load Discord OAuth credentials from bot config
    config_path = (
        Path(__file__).resolve().parent.parent.parent.parent
        / "discord-bot"
        / "settings"
        / "token.yml"
    )

    if not config_path.exists():
        print(f"Warning: Bot config not found at {config_path}")
        return

    try:
        with open(config_path) as f:
            config = yaml.safe_load(f)

        client_id = config.get("discord", {}).get("oauth", {}).get("client_id")
        client_secret = config.get("discord", {}).get("oauth", {}).get("client_secret")

        if not client_id or not client_secret:
            print("Warning: Discord OAuth credentials not found in config")
            return

        # Get the default site
        site = Site.objects.get(pk=1)

        # Create or update Discord SocialApp
        discord_app, created = SocialApp.objects.get_or_create(
            provider="discord",
            defaults={
                "name": "Discord OAuth",
                "client_id": client_id,
                "secret": client_secret,
            },
        )

        # Associate with the site
        discord_app.sites.add(site)

        if created:
            print("✓ Created Discord SocialApp configuration")
        else:
            # Update existing app
            discord_app.client_id = client_id
            discord_app.secret = client_secret
            discord_app.save()
            print("✓ Updated Discord SocialApp configuration")

    except Exception as e:
        print(f"Error setting up Discord OAuth: {e}")


def remove_discord_oauth(apps, schema_editor):  # noqa: ARG001
    """Remove Discord OAuth SocialApp"""
    SocialApp = apps.get_model("socialaccount", "SocialApp")

    try:
        discord_app = SocialApp.objects.get(provider="discord")
        discord_app.delete()
        print("✓ Removed Discord SocialApp configuration")
    except SocialApp.DoesNotExist:
        pass


class Migration(migrations.Migration):
    dependencies = [
        ("socialaccount", "0006_alter_socialaccount_extra_data"),
        ("sites", "0002_alter_domain_unique"),
    ]

    operations = [
        migrations.RunPython(setup_discord_oauth, remove_discord_oauth),
    ]
