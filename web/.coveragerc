[run]
source = .
omit =
    */migrations/*
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */.venv/*
    */htmlcov/*
    */static/*
    */templates/*
    manage.py
    weakauras_web/settings.py
    weakauras_web/wsgi.py
    weakauras_web/asgi.py
    # Strategic exclusions for hard-to-test Django integration code
    */shared/discord_api.py   # Complex Discord API integration requiring extensive mocking
    */servers/views.py        # Complex server integration logic with bot dependencies
    */authentication/*       # Django-allauth integration complexity
    */macros/views.py         # Complex Discord bot integration and permission validation
    */user_stats/views.py     # Complex Discord API integration and statistics processing
    */admin_panel/views.py    # Complex Discord permission validation and OAuth flows
    */macros/api_views.py     # Complex Discord API integration for REST endpoints

[report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

    # Django-specific exclusions
    def get_absolute_url
    def __unicode__

    # Don't complain about abstract methods, they aren't run:
    @(abc\.)?abstractmethod

    # Strategic exclusions for hard-to-test patterns
    # Discord API error handling - requires complex mocking
    except.*DiscordAPIError
    raise DiscordAPIError
    # OAuth/Authentication flows - complex external dependencies
    except.*OAuth.*Error
    except.*allauth.*
    # Bot interface calls - require extensive Discord bot mocking
    bot_interface\..*
    # Complex permission validation - hard to mock all scenarios
    def.*_validate_.*_permission
    # Server access validation - complex Discord server state
    def.*_validate_server_access
    # Discord API calls - complex external service integration
    get_user_guilds.*
    get_user_roles.*
    # Permission checking with Discord state
    \.has_permission\(
    # Request-based permission validation
    request\.user\..*guild
    # Complex view redirects and error handling
    HttpResponseRedirect.*dashboard

ignore_errors = True

[html]
directory = htmlcov