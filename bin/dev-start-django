#!/bin/bash

# Development script: Stop all services and start Django in background
# Usage: bin/dev-start-django (can be run from anywhere)

set -e

# Get the directory where this script is located
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
# Get the repository root (parent of bin directory)
REPO_ROOT="$(dirname "$SCRIPT_DIR")"

echo "🔄 Stopping all services and starting Django in background..."
echo "📁 Repository root: $REPO_ROOT"
echo ""

# Change to repository root
cd "$REPO_ROOT"

# Stop any existing services
echo "Stopping existing services..."
pkill -f 'python.*manage.py.*runserver' || true
pkill -f 'python.*main.py' || true

# Give processes time to cleanup
sleep 2

# Ensure logs directory exists
mkdir -p logs

# Run Django migrations to ensure database is ready
echo "Running Django migrations..."
uv run python web/manage.py migrate --verbosity 1

# Ensure Discord OAuth is configured (backup if migration didn't handle it)
echo "Verifying Discord OAuth configuration..."
if ! (cd "$REPO_ROOT" && uv run python web/manage.py shell -c "from allauth.socialaccount.models import SocialApp; exit(0 if SocialApp.objects.filter(provider='discord').exists() else 1)") 2>/dev/null; then
    echo "Setting up Discord OAuth configuration..."
    (cd "$REPO_ROOT" && uv run python web/manage.py setup_discord_oauth --config-path ~/.config/weakauras-bot/token.yml) 2>/dev/null || \
    (cd "$REPO_ROOT" && uv run python web/manage.py setup_discord_oauth) 2>/dev/null || \
    echo "Warning: Could not set up Discord OAuth automatically"
else
    echo "Discord OAuth already configured"
fi

# Start Django server in background
echo "Starting Django server in background..."
nohup uv run python web/manage.py runserver 8000 > logs/django.log 2>&1 &
DJANGO_PID=$!

echo ""
echo "✅ All services stopped. Django server started in background (PID: $DJANGO_PID)"
echo "📁 Log file: $REPO_ROOT/logs/django.log"
echo "📊 View logs with: bin/dev-logs-django"
echo "🛑 Stop services with: bin/dev-stop-all"
